<?xml version="1.0" encoding="utf-8"?>
<topic id="221ad13b-6f59-4133-a877-2494f74c7f62" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>ContextualWebPart simplifies creation of webparts with contextual ribbon tabs.</para>
    </introduction>
    <procedure>
      <title>Creating a simple demo</title>
      <steps class="ordered">
        <step>
          <content>
            <para>Create new SharePoint VisualWebPart project in Visual Studio 2010 </para>
          </content>
        </step>
        <step>
          <content>
            <para>Add reference to FluentRibbon.dll </para>
          </content>
        </step>
        <step>
          <content>
            <para>Add FluentRibbon.dll into GAC deployment list (Package.package, 'Advanced' tab)</para>
          </content>
        </step>
        <step>
          <content>
            <para>Open file VisualWebPart1.cs and inherit class VisualWebPart1 from ContextualWebPart </para>
          </content>
        </step>
        <step>
          <content>
            <para>Override GetContextualGroupDefinition() method and provide contextual ribbon tab-group definition to FluentRibbon </para>
          </content>
        </step>
        <step>
          <content>
            <para>Deploy! </para>
          </content>
        </step>
      </steps>
    </procedure>
    <codeExample>
    <code language="csharp">
[ToolboxItemAttribute(false)]
public class VisualWebPart1 : ContextualWebPart
{
    // Visual Studio might automatically update this path when you change the Visual Web Part project item.
    private const string _ascxPath = @"~/_CONTROLTEMPLATES/VisualWebPartTestProject/VisualWebPart2/VisualWebPart2UserControl.ascx";

    protected override void CreateChildControls()
    {
        Control control = Page.LoadControl(_ascxPath);
        Controls.Add(control);
    }

    public override ContextualGroupDefinition GetContextualGroupDefinition()
    {
        return new ContextualGroupDefinition()
        {
            Id = "TestContextualGroup",
            Title = "Contextual actions",
            Tabs = new TabDefinition[]
            {
                new TabDefinition()
	            {
	                Id = "TestTab",
	                Title = "My tab",
	                Groups = new GroupDefinition[]
	                {
	                    new GroupDefinition()
	                    {
	                        Id = "TestControlGroup",
	                        Title = "Buttons group",
	                        Template = GroupTemplateLibrary.SimpleTemplate,
	                        Controls = new ControlDefinition[]
	                        {
	                            new ButtonDefinition()
	                            {
	                                Id = "TestButton",
	                                Title = "Test alert",
	                                Image = new ImageDefinition() { Url32 = "/_layouts/images/erroricon.png" },
	                                CommandJavaScript = "alert('test')"
	                            }
	                        }
	
	                    }
	                }
	            }
            }
        };

    }
}
	</code>
    </codeExample>
    <para>
    	You will see the following result after deployment of this code:
    </para>
    <mediaLink>
    	<image xlink:href="contextualWebPart"/>
	</mediaLink>
	<para>
		Note: ContextualWebPart feature is not available in Sandbox solutions.
	</para>
    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->
    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->
    <!-- <security>Optional discussion of security issues.</security> -->
    <relatedTopics>
    	<codeEntityReference>T:FluentRibbon.ContextualWebPart</codeEntityReference>
    </relatedTopics>
  </developerHowToDocument>
</topic>
